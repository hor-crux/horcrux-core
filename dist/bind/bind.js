define(["require", "exports", "./model", "../util/visit", "./bindattribute", "./bindnode"], function (require, exports, model_1, visit_1, bindattribute_1, bindnode_1) {
    var regex = /\{\{(.+)\}\}/gm;
    exports.regex = regex;
    function bind(node, model) {
        if (!!node.dontVisit || (typeof node["hasAttribute"] === "function" && node.hasAttribute("dontVisit")))
            return false;
        if (node.attributes) {
            var names = [].map.call(node.attributes, function (a) { return a.name; });
            names.forEach(function (name) {
                var attr = [].filter.call(node.attributes, function (a) { return a.name === name; })[0];
                bindattribute_1.default(node, attr, model);
            });
        }
        if (!!node.dontVisit || (typeof node["hasAttribute"] === "function" && node.hasAttribute("dontVisit")))
            return false;
        if (node.nodeName.indexOf("-") > -1 && node.nodeName.indexOf("#") === -1)
            return false;
        bindnode_1.default(node, model);
        return true;
    }
    function bindDom(dom, models) {
        var model = new model_1.default(models);
        visit_1.default(dom, function (node) {
            return bind(node, model);
        });
    }
    exports.bindDom = bindDom;
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJpbmQvYmluZC50cyJdLCJuYW1lcyI6WyJiaW5kIiwiYmluZERvbSJdLCJtYXBwaW5ncyI6IjtJQU1BLElBQUksS0FBSyxHQUFHLGdCQUFnQjtJQWdDcEIsYUFBSyxTQWhDZ0I7SUFHN0IsY0FBYyxJQUFTLEVBQUUsS0FBVztRQUNuQ0EsRUFBRUEsQ0FBQUEsQ0FBQ0EsQ0FBQ0EsQ0FBT0EsSUFBS0EsQ0FBQ0EsU0FBU0EsSUFBSUEsQ0FBQ0EsT0FBT0EsSUFBSUEsQ0FBQ0EsY0FBY0EsQ0FBQ0EsS0FBS0EsVUFBVUEsSUFBY0EsSUFBS0EsQ0FBQ0EsWUFBWUEsQ0FBQ0EsV0FBV0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDdkhBLE1BQU1BLENBQUNBLEtBQUtBLENBQUNBO1FBRWRBLEVBQUVBLENBQUFBLENBQUNBLElBQUlBLENBQUNBLFVBQVVBLENBQUNBLENBQUNBLENBQUNBO1lBQ3BCQSxJQUFJQSxLQUFLQSxHQUFHQSxFQUFFQSxDQUFDQSxHQUFHQSxDQUFDQSxJQUFJQSxDQUFDQSxJQUFJQSxDQUFDQSxVQUFVQSxFQUFFQSxVQUFTQSxDQUFDQSxJQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFBLENBQUEsQ0FBQyxDQUFDQSxDQUFDQTtZQUN0RUEsS0FBS0EsQ0FBQ0EsT0FBT0EsQ0FBQ0EsVUFBU0EsSUFBSUE7Z0JBQzFCLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsVUFBUyxDQUFDLElBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFBLENBQUEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3BGLHVCQUFhLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztZQUNsQyxDQUFDLENBQUNBLENBQUFBO1FBQ0hBLENBQUNBO1FBRURBLEVBQUVBLENBQUFBLENBQUNBLENBQUNBLENBQU9BLElBQUtBLENBQUNBLFNBQVNBLElBQUlBLENBQUNBLE9BQU9BLElBQUlBLENBQUNBLGNBQWNBLENBQUNBLEtBQUtBLFVBQVVBLElBQWNBLElBQUtBLENBQUNBLFlBQVlBLENBQUNBLFdBQVdBLENBQUNBLENBQUNBLENBQUNBO1lBQ3ZIQSxNQUFNQSxDQUFDQSxLQUFLQSxDQUFDQTtRQUVkQSxFQUFFQSxDQUFBQSxDQUFDQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxPQUFPQSxDQUFDQSxHQUFHQSxDQUFDQSxHQUFHQSxDQUFDQSxDQUFDQSxJQUFJQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxPQUFPQSxDQUFDQSxHQUFHQSxDQUFDQSxLQUFLQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUN2RUEsTUFBTUEsQ0FBQ0EsS0FBS0EsQ0FBQ0E7UUFFZEEsa0JBQVFBLENBQUNBLElBQUlBLEVBQUVBLEtBQUtBLENBQUNBLENBQUNBO1FBQ3RCQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQTtJQUNiQSxDQUFDQTtJQUVELGlCQUFpQixHQUFPLEVBQUUsTUFBaUI7UUFDMUNDLElBQUlBLEtBQUtBLEdBQUdBLElBQUlBLGVBQUtBLENBQUNBLE1BQU1BLENBQUNBLENBQUNBO1FBQzlCQSxlQUFLQSxDQUFDQSxHQUFHQSxFQUFFQSxVQUFBQSxJQUFJQTtZQUNkQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxJQUFJQSxFQUFFQSxLQUFLQSxDQUFDQSxDQUFBQTtRQUN6QkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFDSkEsQ0FBQ0E7SUFFYyxlQUFPLFdBRnJCO0lBRXNCIiwiZmlsZSI6ImJpbmQvYmluZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RG9tfSBmcm9tIFwiLi4vdXRpbC90eXBlc1wiXHJcbmltcG9ydCBNb2RlbCBmcm9tIFwiLi9tb2RlbFwiXHJcbmltcG9ydCB2aXNpdCBmcm9tIFwiLi4vdXRpbC92aXNpdFwiXHJcbmltcG9ydCBiaW5kQXR0cmlidXRlIGZyb20gXCIuL2JpbmRhdHRyaWJ1dGVcIlxyXG5pbXBvcnQgYmluZE5vZGUgZnJvbSBcIi4vYmluZG5vZGVcIlxyXG5cclxubGV0IHJlZ2V4ID0gL1xce1xceyguKylcXH1cXH0vZ207XHJcblxyXG5cclxuZnVuY3Rpb24gYmluZChub2RlOk5vZGUsIG1vZGVsOk1vZGVsKTogYm9vbGVhbiB7XHJcblx0aWYoISEoPGFueT5ub2RlKS5kb250VmlzaXQgfHwgKHR5cGVvZiBub2RlW1wiaGFzQXR0cmlidXRlXCJdID09PSBcImZ1bmN0aW9uXCIgJiYgKDxFbGVtZW50Pm5vZGUpLmhhc0F0dHJpYnV0ZShcImRvbnRWaXNpdFwiKSkpXHJcblx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHJcblx0aWYobm9kZS5hdHRyaWJ1dGVzKSB7XHJcblx0XHRsZXQgbmFtZXMgPSBbXS5tYXAuY2FsbChub2RlLmF0dHJpYnV0ZXMsIGZ1bmN0aW9uKGEpIHtyZXR1cm4gYS5uYW1lfSk7XHJcblx0XHRuYW1lcy5mb3JFYWNoKGZ1bmN0aW9uKG5hbWUpIHtcclxuXHRcdFx0bGV0IGF0dHIgPSBbXS5maWx0ZXIuY2FsbChub2RlLmF0dHJpYnV0ZXMsIGZ1bmN0aW9uKGEpIHtyZXR1cm4gYS5uYW1lID09PSBuYW1lfSlbMF07XHJcblx0XHRcdGJpbmRBdHRyaWJ1dGUobm9kZSwgYXR0ciwgbW9kZWwpO1xyXG5cdFx0fSlcclxuXHR9XHJcblx0XHJcblx0aWYoISEoPGFueT5ub2RlKS5kb250VmlzaXQgfHwgKHR5cGVvZiBub2RlW1wiaGFzQXR0cmlidXRlXCJdID09PSBcImZ1bmN0aW9uXCIgJiYgKDxFbGVtZW50Pm5vZGUpLmhhc0F0dHJpYnV0ZShcImRvbnRWaXNpdFwiKSkpXHJcblx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRcclxuXHRpZihub2RlLm5vZGVOYW1lLmluZGV4T2YoXCItXCIpID4gLTEgJiYgbm9kZS5ub2RlTmFtZS5pbmRleE9mKFwiI1wiKSA9PT0gLTEpXHJcblx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRcclxuXHRiaW5kTm9kZShub2RlLCBtb2RlbCk7XHJcblx0cmV0dXJuIHRydWU7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGJpbmREb20oZG9tOkRvbSwgbW9kZWxzOkFycmF5PGFueT4pOiB2b2lkIHtcclxuXHRsZXQgbW9kZWwgPSBuZXcgTW9kZWwobW9kZWxzKTtcclxuXHR2aXNpdChkb20sIG5vZGU9PntcclxuXHRcdHJldHVybiBiaW5kKG5vZGUsIG1vZGVsKVxyXG5cdH0pO1xyXG59XHJcblxyXG5leHBvcnQge3JlZ2V4LCBiaW5kRG9tfSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==