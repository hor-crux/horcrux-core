define(["require", "exports"], function (require, exports) {
    var Model = (function () {
        function Model(objects) {
            this.objects = objects;
        }
        Model.prototype.get = function (path) {
            this.objects.forEach(function (obj) {
                if (Model.has(obj, path))
                    return {
                        object: obj,
                        value: Model.get(obj, path)
                    };
            });
            return void 0;
        };
        Model.prototype.findObject = function (path) {
            this.objects.forEach(function (obj) {
                if (!!Model.has(obj, path))
                    return obj;
            });
            return void 0;
        };
        Model.has = function (object, path) {
            path.split('.')
                .forEach(function (part) {
                if (typeof object[part] === 'undefined')
                    return false;
                else
                    object = object[part];
            });
            return true;
        };
        Model.get = function (object, path) {
            path.split('.')
                .forEach(function (part) {
                object = object[part];
            });
            return object;
        };
        return Model;
    })();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.default = Model;
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJpbmQvbW9kZWwudHMiXSwibmFtZXMiOlsiTW9kZWwiLCJNb2RlbC5jb25zdHJ1Y3RvciIsIk1vZGVsLmdldCIsIk1vZGVsLmZpbmRPYmplY3QiLCJNb2RlbC5oYXMiXSwibWFwcGluZ3MiOiI7SUFFQTtRQUlDQSxlQUFZQSxPQUFrQkE7WUFDN0JDLElBQUlBLENBQUNBLE9BQU9BLEdBQUdBLE9BQU9BLENBQUNBO1FBQ3hCQSxDQUFDQTtRQUVNRCxtQkFBR0EsR0FBVkEsVUFBV0EsSUFBV0E7WUFDckJFLElBQUlBLENBQUNBLE9BQU9BLENBQUNBLE9BQU9BLENBQUNBLFVBQUFBLEdBQUdBO2dCQUN2QkEsRUFBRUEsQ0FBQUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsR0FBR0EsRUFBRUEsSUFBSUEsQ0FBQ0EsQ0FBQ0E7b0JBQ3ZCQSxNQUFNQSxDQUFDQTt3QkFDTkEsTUFBTUEsRUFBRUEsR0FBR0E7d0JBQ1hBLEtBQUtBLEVBQUVBLEtBQUtBLENBQUNBLEdBQUdBLENBQUNBLEdBQUdBLEVBQUNBLElBQUlBLENBQUNBO3FCQUMxQkEsQ0FBQUE7WUFDSEEsQ0FBQ0EsQ0FBQ0EsQ0FBQUE7WUFFRkEsTUFBTUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsQ0FBQ0E7UUFDZkEsQ0FBQ0E7UUFFTUYsMEJBQVVBLEdBQWpCQSxVQUFrQkEsSUFBV0E7WUFDNUJHLElBQUlBLENBQUNBLE9BQU9BLENBQUNBLE9BQU9BLENBQUNBLFVBQUFBLEdBQUdBO2dCQUN2QkEsRUFBRUEsQ0FBQUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsR0FBR0EsRUFBRUEsSUFBSUEsQ0FBQ0EsQ0FBQ0E7b0JBQ3pCQSxNQUFNQSxDQUFDQSxHQUFHQSxDQUFDQTtZQUNiQSxDQUFDQSxDQUFDQSxDQUFBQTtZQUVGQSxNQUFNQSxDQUFDQSxLQUFLQSxDQUFDQSxDQUFDQTtRQUNmQSxDQUFDQTtRQUVNSCxTQUFHQSxHQUFWQSxVQUFXQSxNQUFVQSxFQUFFQSxJQUFXQTtZQUNqQ0ksSUFBSUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsR0FBR0EsQ0FBQ0E7aUJBQ2RBLE9BQU9BLENBQUNBLFVBQUFBLElBQUlBO2dCQUNaQSxFQUFFQSxDQUFBQSxDQUFDQSxPQUFPQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxLQUFLQSxXQUFXQSxDQUFDQTtvQkFDdENBLE1BQU1BLENBQUNBLEtBQUtBLENBQUNBO2dCQUNkQSxJQUFJQTtvQkFDSEEsTUFBTUEsR0FBR0EsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQUE7WUFDdkJBLENBQUNBLENBQUNBLENBQUFBO1lBRUZBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBO1FBQ2JBLENBQUNBO1FBRU1KLFNBQUdBLEdBQVZBLFVBQVdBLE1BQVVBLEVBQUVBLElBQVdBO1lBQ2pDRSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxHQUFHQSxDQUFDQTtpQkFDZEEsT0FBT0EsQ0FBQ0EsVUFBQUEsSUFBSUE7Z0JBQ1pBLE1BQU1BLEdBQUdBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLENBQUFBO1lBQ3RCQSxDQUFDQSxDQUFDQSxDQUFBQTtZQUVGQSxNQUFNQSxDQUFDQSxNQUFNQSxDQUFDQTtRQUNmQSxDQUFDQTtRQUVGRixZQUFDQTtJQUFEQSxDQWxEQSxBQWtEQ0EsSUFBQTtJQWxERDsyQkFrREMsQ0FBQSIsImZpbGUiOiJiaW5kL21vZGVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtPYmplY3RBbmRWYWx1ZX0gZnJvbSBcIi4uL3V0aWwvdHlwZXNcIlxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTW9kZWwge1xyXG5cdFxyXG5cdHByb3RlY3RlZCBvYmplY3RzOkFycmF5PGFueT47XHJcblx0XHJcblx0Y29uc3RydWN0b3Iob2JqZWN0czpBcnJheTxhbnk+KSB7XHJcblx0XHR0aGlzLm9iamVjdHMgPSBvYmplY3RzO1xyXG5cdH1cclxuXHRcclxuXHRwdWJsaWMgZ2V0KHBhdGg6c3RyaW5nKTogT2JqZWN0QW5kVmFsdWUge1xyXG5cdFx0dGhpcy5vYmplY3RzLmZvckVhY2gob2JqID0+IHtcclxuXHRcdFx0aWYoTW9kZWwuaGFzKG9iaiwgcGF0aCkpXHJcblx0XHRcdFx0cmV0dXJuIHtcclxuXHRcdFx0XHRcdG9iamVjdDogb2JqLFxyXG5cdFx0XHRcdFx0dmFsdWU6IE1vZGVsLmdldChvYmoscGF0aClcclxuXHRcdFx0XHR9XHJcblx0XHR9KVxyXG5cdFx0XHJcblx0XHRyZXR1cm4gdm9pZCAwO1xyXG5cdH1cclxuXHRcclxuXHRwdWJsaWMgZmluZE9iamVjdChwYXRoOnN0cmluZyk6IGFueSB7XHJcblx0XHR0aGlzLm9iamVjdHMuZm9yRWFjaChvYmogPT4ge1xyXG5cdFx0XHRpZighIU1vZGVsLmhhcyhvYmosIHBhdGgpKVxyXG5cdFx0XHRcdHJldHVybiBvYmo7XHJcblx0XHR9KVxyXG5cdFx0XHJcblx0XHRyZXR1cm4gdm9pZCAwO1xyXG5cdH1cclxuXHRcclxuXHRzdGF0aWMgaGFzKG9iamVjdDphbnksIHBhdGg6c3RyaW5nKTogYW55IHtcclxuXHRcdHBhdGguc3BsaXQoJy4nKVxyXG5cdFx0LmZvckVhY2gocGFydCA9PiB7XHJcblx0XHRcdGlmKHR5cGVvZiBvYmplY3RbcGFydF0gPT09ICd1bmRlZmluZWQnKVxyXG5cdFx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdFx0ZWxzZVxyXG5cdFx0XHRcdG9iamVjdCA9IG9iamVjdFtwYXJ0XVxyXG5cdFx0fSlcclxuXHRcdFxyXG5cdFx0cmV0dXJuIHRydWU7XHJcblx0fVxyXG5cdFxyXG5cdHN0YXRpYyBnZXQob2JqZWN0OmFueSwgcGF0aDpzdHJpbmcpOiBhbnkge1xyXG5cdFx0cGF0aC5zcGxpdCgnLicpXHJcblx0XHQuZm9yRWFjaChwYXJ0ID0+IHtcclxuXHRcdFx0b2JqZWN0ID0gb2JqZWN0W3BhcnRdXHJcblx0XHR9KVxyXG5cdFx0XHJcblx0XHRyZXR1cm4gb2JqZWN0O1xyXG5cdH1cclxuXHRcclxufSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==