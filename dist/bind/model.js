define(["require", "exports"], function (require, exports) {
    var Model = (function () {
        function Model(objects) {
            this.objects = objects;
        }
        Model.prototype.get = function (path) {
            var ret = void 0;
            this.objects.forEach(function (obj) {
                if (Model.has(obj, path))
                    return ret = {
                        object: obj,
                        value: Model.get(obj, path)
                    };
            });
            return ret;
        };
        Model.prototype.findObject = function (path) {
            var ret = void 0;
            this.objects.forEach(function (obj) {
                if (!!Model.has(obj, path))
                    return ret = obj;
            });
            return ret;
        };
        Model.has = function (object, path) {
            var ret = true;
            path.split('.')
                .forEach(function (part, index, parts) {
                if (typeof object[part] === 'undefined' && index + 1 < parts.length)
                    return ret = false;
                else {
                    object = object[part];
                }
            });
            return ret;
        };
        Model.get = function (object, path) {
            path.split('.')
                .forEach(function (part) {
                object = object[part];
            });
            return object;
        };
        return Model;
    })();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.default = Model;
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJpbmQvbW9kZWwudHMiXSwibmFtZXMiOlsiTW9kZWwiLCJNb2RlbC5jb25zdHJ1Y3RvciIsIk1vZGVsLmdldCIsIk1vZGVsLmZpbmRPYmplY3QiLCJNb2RlbC5oYXMiXSwibWFwcGluZ3MiOiI7SUFFQTtRQUlDQSxlQUFZQSxPQUFrQkE7WUFDN0JDLElBQUlBLENBQUNBLE9BQU9BLEdBQUdBLE9BQU9BLENBQUNBO1FBQ3hCQSxDQUFDQTtRQUVNRCxtQkFBR0EsR0FBVkEsVUFBV0EsSUFBV0E7WUFDckJFLElBQUlBLEdBQUdBLEdBQUdBLEtBQUtBLENBQUNBLENBQUNBO1lBRWpCQSxJQUFJQSxDQUFDQSxPQUFPQSxDQUFDQSxPQUFPQSxDQUFDQSxVQUFBQSxHQUFHQTtnQkFDdkJBLEVBQUVBLENBQUFBLENBQUNBLEtBQUtBLENBQUNBLEdBQUdBLENBQUNBLEdBQUdBLEVBQUVBLElBQUlBLENBQUNBLENBQUNBO29CQUN2QkEsTUFBTUEsQ0FBQ0EsR0FBR0EsR0FBR0E7d0JBQ1pBLE1BQU1BLEVBQUVBLEdBQUdBO3dCQUNYQSxLQUFLQSxFQUFFQSxLQUFLQSxDQUFDQSxHQUFHQSxDQUFDQSxHQUFHQSxFQUFDQSxJQUFJQSxDQUFDQTtxQkFDMUJBLENBQUFBO1lBQ0hBLENBQUNBLENBQUNBLENBQUFBO1lBRUZBLE1BQU1BLENBQUNBLEdBQUdBLENBQUNBO1FBQ1pBLENBQUNBO1FBRU1GLDBCQUFVQSxHQUFqQkEsVUFBa0JBLElBQVdBO1lBQzVCRyxJQUFJQSxHQUFHQSxHQUFHQSxLQUFLQSxDQUFDQSxDQUFDQTtZQUNqQkEsSUFBSUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsT0FBT0EsQ0FBQ0EsVUFBQUEsR0FBR0E7Z0JBQ3ZCQSxFQUFFQSxDQUFBQSxDQUFDQSxDQUFDQSxDQUFDQSxLQUFLQSxDQUFDQSxHQUFHQSxDQUFDQSxHQUFHQSxFQUFFQSxJQUFJQSxDQUFDQSxDQUFDQTtvQkFDekJBLE1BQU1BLENBQUNBLEdBQUdBLEdBQUdBLEdBQUdBLENBQUNBO1lBQ25CQSxDQUFDQSxDQUFDQSxDQUFBQTtZQUVGQSxNQUFNQSxDQUFDQSxHQUFHQSxDQUFDQTtRQUNaQSxDQUFDQTtRQUVNSCxTQUFHQSxHQUFWQSxVQUFXQSxNQUFVQSxFQUFFQSxJQUFXQTtZQUNqQ0ksSUFBSUEsR0FBR0EsR0FBR0EsSUFBSUEsQ0FBQ0E7WUFFZkEsSUFBSUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsR0FBR0EsQ0FBQ0E7aUJBQ2RBLE9BQU9BLENBQUNBLFVBQUNBLElBQUlBLEVBQUVBLEtBQUtBLEVBQUVBLEtBQUtBO2dCQUMzQkEsRUFBRUEsQ0FBQUEsQ0FBQ0EsT0FBT0EsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsS0FBS0EsV0FBV0EsSUFBSUEsS0FBS0EsR0FBQ0EsQ0FBQ0EsR0FBR0EsS0FBS0EsQ0FBQ0EsTUFBTUEsQ0FBQ0E7b0JBQ2hFQSxNQUFNQSxDQUFDQSxHQUFHQSxHQUFHQSxLQUFLQSxDQUFDQTtnQkFDcEJBLElBQUlBLENBQUNBLENBQUNBO29CQUNMQSxNQUFNQSxHQUFHQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFBQTtnQkFDdEJBLENBQUNBO1lBQ0ZBLENBQUNBLENBQUNBLENBQUFBO1lBRUZBLE1BQU1BLENBQUNBLEdBQUdBLENBQUNBO1FBQ1pBLENBQUNBO1FBRU1KLFNBQUdBLEdBQVZBLFVBQVdBLE1BQVVBLEVBQUVBLElBQVdBO1lBQ2pDRSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxHQUFHQSxDQUFDQTtpQkFDZEEsT0FBT0EsQ0FBQ0EsVUFBQUEsSUFBSUE7Z0JBQ1pBLE1BQU1BLEdBQUdBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLENBQUFBO1lBQ3RCQSxDQUFDQSxDQUFDQSxDQUFBQTtZQUVGQSxNQUFNQSxDQUFDQSxNQUFNQSxDQUFDQTtRQUNmQSxDQUFDQTtRQUVGRixZQUFDQTtJQUFEQSxDQXhEQSxBQXdEQ0EsSUFBQTtJQXhERDsyQkF3REMsQ0FBQSIsImZpbGUiOiJiaW5kL21vZGVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtPYmplY3RBbmRWYWx1ZX0gZnJvbSBcIi4uL3V0aWwvdHlwZXNcIlxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTW9kZWwge1xyXG5cdFxyXG5cdHByb3RlY3RlZCBvYmplY3RzOkFycmF5PGFueT47XHJcblx0XHJcblx0Y29uc3RydWN0b3Iob2JqZWN0czpBcnJheTxhbnk+KSB7XHJcblx0XHR0aGlzLm9iamVjdHMgPSBvYmplY3RzO1xyXG5cdH1cclxuXHRcclxuXHRwdWJsaWMgZ2V0KHBhdGg6c3RyaW5nKTogT2JqZWN0QW5kVmFsdWUge1xyXG5cdFx0bGV0IHJldCA9IHZvaWQgMDtcclxuXHRcdFxyXG5cdFx0dGhpcy5vYmplY3RzLmZvckVhY2gob2JqID0+IHtcclxuXHRcdFx0aWYoTW9kZWwuaGFzKG9iaiwgcGF0aCkpXHJcblx0XHRcdFx0cmV0dXJuIHJldCA9IHtcclxuXHRcdFx0XHRcdG9iamVjdDogb2JqLFxyXG5cdFx0XHRcdFx0dmFsdWU6IE1vZGVsLmdldChvYmoscGF0aClcclxuXHRcdFx0XHR9XHJcblx0XHR9KVxyXG5cdFx0XHJcblx0XHRyZXR1cm4gcmV0O1xyXG5cdH1cclxuXHRcclxuXHRwdWJsaWMgZmluZE9iamVjdChwYXRoOnN0cmluZyk6IGFueSB7XHJcblx0XHRsZXQgcmV0ID0gdm9pZCAwO1xyXG5cdFx0dGhpcy5vYmplY3RzLmZvckVhY2gob2JqID0+IHtcclxuXHRcdFx0aWYoISFNb2RlbC5oYXMob2JqLCBwYXRoKSlcclxuXHRcdFx0XHRyZXR1cm4gcmV0ID0gb2JqO1xyXG5cdFx0fSlcclxuXHRcdFxyXG5cdFx0cmV0dXJuIHJldDtcclxuXHR9XHJcblx0XHJcblx0c3RhdGljIGhhcyhvYmplY3Q6YW55LCBwYXRoOnN0cmluZyk6IGFueSB7XHJcblx0XHRsZXQgcmV0ID0gdHJ1ZTtcclxuXHRcdFxyXG5cdFx0cGF0aC5zcGxpdCgnLicpXHJcblx0XHQuZm9yRWFjaCgocGFydCwgaW5kZXgsIHBhcnRzKSA9PiB7XHJcblx0XHRcdGlmKHR5cGVvZiBvYmplY3RbcGFydF0gPT09ICd1bmRlZmluZWQnICYmIGluZGV4KzEgPCBwYXJ0cy5sZW5ndGgpXHJcblx0XHRcdFx0cmV0dXJuIHJldCA9IGZhbHNlO1xyXG5cdFx0XHRlbHNlIHtcclxuXHRcdFx0XHRvYmplY3QgPSBvYmplY3RbcGFydF1cclxuXHRcdFx0fVxyXG5cdFx0fSlcclxuXHRcdFxyXG5cdFx0cmV0dXJuIHJldDtcclxuXHR9XHJcblx0XHJcblx0c3RhdGljIGdldChvYmplY3Q6YW55LCBwYXRoOnN0cmluZyk6IGFueSB7XHJcblx0XHRwYXRoLnNwbGl0KCcuJylcclxuXHRcdC5mb3JFYWNoKHBhcnQgPT4ge1xyXG5cdFx0XHRvYmplY3QgPSBvYmplY3RbcGFydF1cclxuXHRcdH0pXHJcblx0XHRcclxuXHRcdHJldHVybiBvYmplY3Q7XHJcblx0fVxyXG5cdFxyXG59Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9